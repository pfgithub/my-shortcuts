// shortcut: icon list v2

Comment
| Made by pfg
| https://routinehub.co/user/pfg
| /u/pfg___
| pfg#4865

GetDictionaryFromInput
SetVariable Input

Text "Icon List v2" -> v:ThisShortcut

createfolder service="iCloud Drive" "/IconListV2"

/*
if ^(Count ^(v:Input) Items) Equals 0
    getfile a{
      service="iCloud Drive",
      showdocumentpicker=false,
      filepath="/IconListV2/CurrentPage.json",
      errorifnotfound=false
    }
    setVariable v:Input
    if ^(count Items) Equals 0
    otherwise
        chooseFromMenu "Previous edits recovered"
        | Continue editing
        | Discard edits
        case Continue
        case Discard
            Dictionary{} -> v:Input
        end
    end
otherwise
    getVariable v:Input
end

savefile ^(v:Input) service="iCloud Drive" false "/IconListV2/CurrentPage.json" true
*/


/*
// Usage: Escape "text"
@defmacro Escape @:text{type:text}
    runShortcut v:ThisShortcut false ^(Dictionary{ action: Escape, text: "\(@:text)" })
@defend
*/

GetVariable v:Input:action

// runShortcut v:ThisShortcut false ^(Dictionary{ action: Escape, text: "text" })
// escapes a string for use in a vcard
if Equals "Escape"
    GetVariable v:Input:text
    replacetext "\\" "\\\\"
    replacetext "\n" " "
    replacetext ";" "\\;"
    exitShortcut
otherwise
end

// runShortcut v:ThisShortcut false ^(Dictionary{ action: CreateCard, carddata: {name, description, note, photo?} })
// creates a text out of a dictionary containing card data
if Equals "CreateCard" 
    getVariable v:Input:carddata -> v:CardData

    if ^(Count "Characters" ^(v:CardData:photo)) "Equals" 1
        text ""
    otherwise
        text "PHOTO;ENCODING=b:\(v:CardData:photo)"
    end -> mv:Photo

    if ^(Count "Characters" ^(v:CardData:name)) "Equals" 0
        text "No Title"
    otherwise
        getVariable v:CardData:name
    end -> mv:Name

    text -> mv:Result
    | BEGIN:VCARD
    | VERSION:3.0
    | N;CHARSET=utf-8:\(runShortcut v:ThisShortcut false ^(Dictionary{ action:Escape, text: mv:Name }));;;
    | ORG;CHARSET=utf-8:\(runShortcut v:ThisShortcut false ^(Dictionary{ action:Escape, text: v:CardData:description }))
    | NOTE;CHARSET=utf-8:\(runShortcut v:ThisShortcut false ^(Dictionary{ action:Escape, text: v:CardData:note }))
    | \(mv:Photo)
    | END:VCARD

    // return as text
    exitShortcut ^(mv:Result)
otherwise
end

// runShortcut v:ThisShortcut false ^(Dictionary{ action: AsContact, vcard: "<vCard Text Here>" }) 
// converts a given vcard string to a contact
if Equals "AsContact"
    getVariable v:Input:vcard
    setName "a.vcf" -> mv:vCard
    exitShortcut ^(mv:vCard{as:Contact})
otherwise
end

// runShortcut v:ThisShortcut false ^(Dictionary{ action: ChoosePhoto }) 
// prompts to select a photo
if Equals "ChoosePhoto"
    selectphotos selectmultiple=false -> mv:SelectedPhoto

    // resize to 123x123 (@3x)
    resizeimage width=123 -> v:Image
    getVariable v:Image{as:Image,get:Height}
    
    if "Is Greater Than" 123
      resizeimage ^(mv:SelectedPhoto) width="" height=123 -> v:Image
    otherwise
    end
    
    // place on top of a transparent image to make a 123x123
    Text "R0lGODlhAQABAIABAAAAAP///yH5BAEAAAEALAAAAAABAAEAAAICTAEAOw=="
    base64encode mode="Decode"
    resizeimage width=123 height=123 -> mv:TransparentImage

    overlayimage ^(mv:TransparentImage) v:Image showimageeditor=false position="Center" -> v:Image
    overlayimage ^(mv:TransparentImage) v:Image showimageeditor=false position="Center" width=87 height=87 -> v:SizedImage
    
    base64encode ^(v:Image) mode="Encode" linebreaks="None" -> v:Image
    base64encode ^(v:SizedImage) mode="Encode" linebreaks="None" -> v:SizedImage
    

    // show both and pick which to use
    text -> v:vCard
    | BEGIN:VCARD\nVERISION:3.0\nPHOTO;ENCODING=b:\(v:Image)\nNOTE;CHARSET=utf-8:standardImage\nN;CHARSET=utf-8:Original Size;;;\nEND:VCARD
    | BEGIN:VCARD\nVERISION:3.0\nPHOTO;ENCODING=b:\(v:SizedImage)\nNOTE;CHARSET=utf-8:sizedImage\nN;CHARSET=utf-8:Fit in Circle;;;\nEND:VCARD
    | BEGIN:VCARD\nVERISION:3.0\nNOTE;CHARSET=utf-8:noImage\nN;CHARSET=utf-8:No Image;;;\nEND:VCARD
    
    runShortcut v:ThisShortcut false ^(Dictionary{ action: AsContact, vcard: v:vCard }) 
    chooseFromList -> mv:ChosenItem

    getVariable mv:ChosenItem{as:Contact,get:Notes}

    if Equals "standardImage"; getVariable v:Image; otherwise; end
    if Equals "sizedImage"; getVariable v:SizedImage; otherwise; end
    if Equals "noImage"; text " "; otherwise; end

    exitShortcut
otherwise
end

// runShortcut v:ThisShortcut false ^(Dictionary{ action: EditItem, carddata: {name, description, note, photo?} }) 
// edits a given item
if Equals "EditItem"

    getVariable v:Input:carddata -> v:CardData

    nothing -> v:ActionList
    
    // 
    text -> mv:vCard
    | \(runShortcut v:ThisShortcut false ^(Dictionary{ action: CreateCard, carddata: v:CardData }))
    | BEGIN:VCARD\nVERISION:3.0\nN;CHARSET=utf-8:-------;;;\nEND:VCARD
    | BEGIN:VCARD\nVERISION:3.0\nNOTE;CHARSET=utf-8:setIcon\nN;CHARSET=utf-8:Icon;;;\nEND:VCARD
    | BEGIN:VCARD\nVERISION:3.0\nNOTE;CHARSET=utf-8:setName\nN;CHARSET=utf-8:Title;;;\nORG;CHARSET=utf-8:\(runShortcut v:ThisShortcut false ^(Dictionary{ action:Escape, text: v:CardData:name }))\nEND:VCARD
    | BEGIN:VCARD\nVERISION:3.0\nNOTE;CHARSET=utf-8:setDescription\nN;CHARSET=utf-8:Description;;;\nORG;CHARSET=utf-8:\(runShortcut v:ThisShortcut false ^(Dictionary{ action:Escape, text: v:CardData:description }))\nEND:VCARD
    | BEGIN:VCARD\nVERISION:3.0\nNOTE;CHARSET=utf-8:setNote\nN;CHARSET=utf-8:Note (Hidden);;;\nORG;CHARSET=utf-8:\(runShortcut v:ThisShortcut false ^(Dictionary{ action:Escape, text: v:CardData:note }))\nEND:VCARD
    | BEGIN:VCARD\nVERISION:3.0\nN;CHARSET=utf-8:-------;;;\nEND:VCARD
    | BEGIN:VCARD\nVERISION:3.0\nNOTE;CHARSET=utf-8:doneEditing\nN;CHARSET=utf-8:Save;;;\nEND:VCARD

    runShortcut v:ThisShortcut false ^(Dictionary{ action: AsContact, vcard: mv:vCard })

    chooseFromList -> mv:ChosenItem

    getVariable mv:ChosenItem{as:Contact,get:Notes} -> mv:Notes

    if Equals "setIcon"
        runShortcut v:ThisShortcut false ^(Dictionary{ action: ChoosePhoto }) -> mv:NewPhoto
        v:CardData = setDictionaryValue ^(v:CardData) "photo" mv:NewPhoto

        nothing
    otherwise
    end
    

    if Equals "setName"
        askforinput question="New Name" defaultanswer=v:CardData:name -> mv:NewValue
        v:CardData = setDictionaryValue ^(v:CardData) "name" mv:NewValue

        nothing
    otherwise
    end

    if Equals "setDescription"
        askforinput question="New Description" defaultanswer=v:CardData:description -> mv:NewValue
        v:CardData = setDictionaryValue ^(v:CardData) "description" mv:NewValue
        
        nothing
    otherwise
    end

    if Equals "setNote"
        askforinput question="New Note" defaultanswer=v:CardData:note -> mv:NewValue
        v:CardData = setDictionaryValue ^(v:CardData) "note" mv:NewValue
        
        nothing
    otherwise
    end

    runShortcut v:ThisShortcut false ^(Dictionary{ action: EditItem, carddata: v:CardData }) 
    exitShortcut
otherwise
end

runShortcut v:ThisShortcut false ^(Dictionary{ action: EditItem, carddata: {name: "", description: "", note: "", photo: " "} }) 
exitShortcut
